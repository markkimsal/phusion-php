FROM markkimsal/php:8.0.15-fpm as fpm
FROM markkimsal/phusion-serverimage:0.11-debian-buster
ARG WITH_SAMBA
ARG WITH_SQLSRV
ARG WITH_TENSOR
ARG WITH_IMAGICK
ARG WITH_GMAGICK


RUN apt-get update;
RUN install_clean nginx unzip

COPY --from=fpm /usr/local/ /usr/local/
COPY --from=fpm /usr/lib/x86_64-linux-gnu/libargon*.so.1   \
                /usr/lib/x86_64-linux-gnu/libxml2.so.2.9.4 \
                /usr/lib/x86_64-linux-gnu/libicu*.so.63.1  \
                /usr/lib/x86_64-linux-gnu/libsodium*.so.23 \
                /usr/lib/x86_64-linux-gnu/libsql*.so.0.8.6 \
                /usr/lib/x86_64-linux-gnu/libpq*.so        \
                /usr/lib/x86_64-linux-gnu/libpng*.so       \
                /usr/lib/x86_64-linux-gnu/libjpeg*.so      \
                /usr/lib/x86_64-linux-gnu/libzip*.so       \
                /usr/lib/x86_64-linux-gnu/libfreet*.so     \
                /usr/lib/x86_64-linux-gnu/libmemcached*.so \
                /usr/lib/x86_64-linux-gnu/libonig.so.5.0.0 \
                /usr/lib/x86_64-linux-gnu/libpq.so.5 \
                /usr/lib/x86_64-linux-gnu/



COPY --from=fpm /optionallibs \
                /usr/lib/x86_64-linux-gnu/

# MSSQL
COPY --from=fpm /optionaletc /etc/
COPY --from=fpm /opt /opt/

#COPY --from=fpm /usr/lib/x86_64-linux-gnu/libodbc*.so.2     \
#                /usr/lib/x86_64-linux-gnu/libodbcinst*.so.2 \
#                /usr/lib/x86_64-linux-gnu/libsybdb*.so.5    \
#                /usr/lib/x86_64-linux-gnu/
#

RUN echo '/opt/microsoft/msodbcsql17/lib64/' > /etc/ld.so.conf.d/msodbcsql.conf

RUN ldconfig

COPY runit /etc/service/
COPY start-container /usr/local/bin/start-container
RUN chmod a+x /usr/local/bin/start-container
RUN chown -R www-data /var/www
RUN mkdir /app && chown www-data /app

RUN set -ex && \
    { \
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"; \
        php composer-setup.php; \
        php -r "unlink('composer-setup.php');"; \
        mv composer.phar /usr/local/bin/composer; \
        chmod a+x /usr/local/bin/composer; \
    }

RUN set -ex && \
    { \
        apt-get update ; \
        apt-get install -y --no-install-recommends git-core; \
        rm -rf /var/lib/apt/lists/*; \
    }

RUN set -ex && \
    { \
        cd ~; \
        curl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh; \
        bash ./nodesource_setup.sh; \
        apt-get install -y nodejs; \
    }
        #curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash; \*/
        #export NVM_DIR="root/.nvm"; \*/
        #[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" \*/
        #[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" \*/
        #nvm install v12.14; \*/

RUN set -ex && \
    { \
     curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -; \
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list; \
     apt-get update && apt-get install yarn; \
     rm -rf /var/lib/apt/lists/*; \
   }

RUN set -ex \
    && { \
            apt-get update ; \
            apt-get install -y ca-certificates; \
            rm -rf /var/lib/apt/lists/*; \
       }

RUN set -ex && \
    { \
        curl -LO https://deployer.org/deployer.phar; \
        mv deployer.phar /usr/local/bin/deployer; \
        chmod +x /usr/local/bin/deployer; \
        composer global require deployer/recipes --dev; \
        curl -L https://raw.githubusercontent.com/kohkimakimoto/altax/master/installer.sh | bash -s system; \
        apt-get update && apt-get install openssh-client; \
        rm -rf /var/lib/apt/lists/*; \
    }



WORKDIR /app
CMD ["/usr/local/bin/start-container"]
