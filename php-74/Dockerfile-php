FROM php:7.4.23-fpm-buster as fpm
ARG WITH_TENSOR=""
ARG WITH_SAMBA=""
ARG WITH_SQLSRV=""

# MYSQL
RUN docker-php-ext-install pdo pdo_mysql mysqli


# PGSQL
RUN set -ex \
    && { \
			apt-get update ; \
            apt-get install -y libpq-dev; \
            rm -rf /var/lib/apt/lists/*; \
            docker-php-ext-install pdo pdo_pgsql; \
       }


# MSSQL
# Add Microsoft repo for Microsoft ODBC Driver 13 for Linux
RUN set -ex \
	&&  if [ ! -z "$WITH_SQLSRV" ] ; then { \
		apt-get update; \
	    apt-get install -y apt-utils gnupg curl build-essential libaio1 software-properties-common locales iputils-ping --no-install-recommends; \
    	apt-get install -y apt-transport-https; \
    	curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - ; \
    	curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list > /etc/apt/sources.list.d/mssql-release.list; \
	}; fi

# Install Dependencies
RUN set -ex \
	&&  if [ ! -z "$WITH_SQLSRV" ] ; then \
		apt-get update; \
		ACCEPT_EULA=Y apt-get install -y \
		unixodbc \
		unixodbc-dev \
		libgss3 \
		odbcinst \
		msodbcsql17 \
		locales \
		freetds-bin \
		freetds-dev \
		freetds-common \
		libct4 \
		libsybdb5 \
		tdsodbc ; \
		echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen \
	; fi

# MSSQL
# Enable extensions
# Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.
RUN set -ex \
	&&  if [ ! -z "$WITH_SQLSRV" ] ; then { \
		docker-php-ext-configure pdo_dblib \
		--with-libdir=/lib/x86_64-linux-gnu/;  \
		docker-php-ext-install pdo_dblib; \
		pecl install pdo_sqlsrv sqlsrv; \
		docker-php-ext-enable pdo_sqlsrv sqlsrv; \
	}; fi


## ZIP
RUN set -ex \
    && { \
        apt-get update ; \
        apt-get install -y libzip-dev libzip4; \
        rm -rf /var/lib/apt/lists/*; \
        docker-php-ext-configure zip --with-zip; \
        docker-php-ext-install zip; \
    }

## GD
RUN set -ex \
    && { \
			apt-get update ; \
            apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libwebp-dev; \
            rm -rf /var/lib/apt/lists/*; \
            docker-php-ext-configure gd \
            --with-freetype \
            --with-jpeg \
            --with-webp; \
            docker-php-ext-install gd; \
       }


## OPCACHE
RUN set -ex \
    && { \
    		docker-php-ext-enable opcache; \
	}

## memcached
RUN set -ex \
    && { \
            apt-get update ; \
            apt-get install -y libmemcached-dev; \
            rm -rf /var/lib/apt/lists/*; \
       }

RUN set -ex && \
    { \
            pecl install igbinary && \
            pecl install --nobuild memcached && \
            cd "$(pecl config-get temp_dir)/memcached" && \
            phpize && \
            ./configure --enable-memcached-igbinary && \
            make -j$(nproc) && \
            make install; \
    } && \
    docker-php-ext-enable igbinary memcached

## INTL - money_format
RUN set -ex \
    && { \
            apt-get update ; \
            apt-get install -y zlib1g-dev libicu-dev; \
            rm -rf /var/lib/apt/lists/*; \
            docker-php-ext-configure intl \
               && docker-php-ext-install intl; \
       }


## XDEBUG
RUN set -ex && \
    { \
            pecl install xdebug; \
    }

# XML
RUN set -ex \
    && { \
        apt-get update ; \
        apt-get install -y libxml2-dev; \
        rm -rf /var/lib/apt/lists/*; \
        docker-php-ext-install soap; \
    }


## SOAP
RUN set -ex \
    && { \
        apt-get update ; \
        apt-get install -y libxml2-dev; \
        rm -rf /var/lib/apt/lists/*; \
        docker-php-ext-install soap; \
    }

# SSH
RUN set -ex \
    && { \
        apt-get update ; \
        apt-get install -y libssl-dev libssh2-1-dev git; \
        rm -rf /var/lib/apt/lists/*; \
        pecl install ssh2-1.3.1; \
        docker-php-ext-enable ssh2; \
   }

# BC MATH
RUN docker-php-ext-install bcmath;

# PCNTL
RUN docker-php-ext-install pcntl


# LIBSODIUM
RUN set -ex \
    && { \
        apt-get update ; \
        apt-get install -y libsodium-dev libsodium23; \
        rm -rf /var/lib/apt/lists/*; \
        pecl install libsodium; \
        docker-php-ext-enable sodium; \
   }

RUN mkdir /optionallibs

RUN set -ex \
	&&  if [ ! -z "$WITH_SQLSRV" ] ; then \
		cp /usr/lib/x86_64-linux-gnu/libodbc*.so.2      \
			/usr/lib/x86_64-linux-gnu/libodbcinst*.so.2 \
			/usr/lib/x86_64-linux-gnu/libsybdb*.so.5    \
			/optionallibs/ \
	;else \
		mkdir /opt/microsoft; \
		mkdir /etc/odbc; \
		mkdir /etc/ODBC \
	;fi

RUN set -ex \
	&&  if [ ! -z "$WITH_SAMBA" ] ; then \
	mkdir /optionallibs/samba; \
	apt-get update; \
	apt-get install -y libsmbclient libsmbclient-dev; \
	rm -Rf /var/lib/apt/lists/*; \
	pecl install smbclient-1.0.6; \
	docker-php-ext-enable smbclient \
	; fi

RUN set -ex \
	&&  if [ ! -z "$WITH_SAMBA" ] ; then \
	cp /usr/lib/x86_64-linux-gnu/libsmbclient*.so.0 \
                                /usr/lib/x86_64-linux-gnu/libsamba*   \
                                /usr/lib/x86_64-linux-gnu/libsmb*     \
                                /usr/lib/x86_64-linux-gnu/libndr*  \
                                /usr/lib/x86_64-linux-gnu/libevent*  \
                                /usr/lib/x86_64-linux-gnu/libtevent*  \
                                /usr/lib/x86_64-linux-gnu/libdcerpc*  \
                                /usr/lib/x86_64-linux-gnu/libldb*  \
                                /usr/lib/x86_64-linux-gnu/libtdb*  \
                                /usr/lib/x86_64-linux-gnu/libjansson*  \
                                /usr/lib/x86_64-linux-gnu/libwbclient*  \
                                /usr/lib/x86_64-linux-gnu/libsamdb*  \
                                /usr/lib/x86_64-linux-gnu/libtalloc*  \
                                /optionallibs/; \
	cp -r /usr/lib/x86_64-linux-gnu/samba/* \
                                /optionallibs/samba/ \
	;fi


